name: Backend code coverage
permissions:
  contents: read
on:
  pull_request:
    branches: ["main"]
    paths:
      - "backend/**"
env:
  GITHUB_WORKFLOW: github_actions
  POSTGRES_VERSION: "16"
  UBUNTU_VERSION: "ubuntu-24.04"
  PYTHON_VERSION: "3.12"
jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      backend-directory: ./backend
      DJANGO_DEBUG: 'True'
      POSTGRES_NAME: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DB_HOST: localhost
      EMAIL_HOST: localhost
      EMAIL_PORT: 1025
      EMAIL_HOST_USER: ''
      EMAIL_HOST_PASSWORD: ''
      DEFAULT_FROM_EMAIL: 'ciso-assistant@alsigo.net'
      CISO_ASSISTANT_SUPERUSER_EMAIL: ''
      CISO_ASSISTANT_URL: http://127.0.0.1:5173
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres # test credential
          POSTGRES_DB: postgres
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false
          installer-parallel: true
      - name: Install backend requirements
        working-directory: ${{ env.backend-directory }}
        run: poetry install
      - name: Run migrations
        working-directory: ${{ env.backend-directory }}
        run: poetry run python manage.py migrate
      - name: Run coverage
        working-directory: ${{ env.backend-directory }}
        env:
          DATABASE_URL: "postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres"
        run: find . -path '*/tests/*' -and -name 'test*.py' -and -not -path "./venv/*" | xargs coverage run -m pytest
      - name: Display coverage report
        working-directory: ${{ env.backend-directory }}
        env:
          DATABASE_URL: "postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres"
        run: coverage report
