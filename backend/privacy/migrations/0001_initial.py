# Generated by Django 5.1.7 on 2025-03-24 16:50

import django.db.models.deletion
import iam.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0062_appliedcontrol_filtering_labels_and_more"),
        ("iam", "0010_user_preferences"),
        ("tprm", "0004_remove_entityassessment_project_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Processing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("ref_id", models.CharField(blank=True, max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("in_review", "In Review"),
                            ("approved", "Approved"),
                            ("deprecated", "Deprecated"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "legal_basis",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("consent", "Consent"),
                            ("contract", "Performance of a Contract"),
                            ("legal_obligation", "Compliance with a Legal Obligation"),
                            ("vital_interests", "Protection of Vital Interests"),
                            (
                                "public_interest",
                                "Performance of a Task in the Public Interest",
                            ),
                            ("legitimate_interests", "Legitimate Interests"),
                            (
                                "explicit_consent",
                                "Explicit Consent for Special Categories",
                            ),
                            (
                                "employment_social_security",
                                "Employment and Social Security Law",
                            ),
                            (
                                "vital_interests_incapacity",
                                "Vital Interests (Subject Physically/Legally Incapable)",
                            ),
                            (
                                "nonprofit_organization",
                                "Processing by Nonprofit Organization",
                            ),
                            (
                                "public_data",
                                "Data Manifestly Made Public by the Data Subject",
                            ),
                            (
                                "legal_claims",
                                "Establishment, Exercise or Defense of Legal Claims",
                            ),
                            (
                                "substantial_public_interest",
                                "Substantial Public Interest",
                            ),
                            (
                                "preventive_medicine",
                                "Preventive or Occupational Medicine",
                            ),
                            ("public_health", "Public Health"),
                            (
                                "archiving_research",
                                "Archiving, Research or Statistical Purposes",
                            ),
                            (
                                "child_consent",
                                "Child's Consent with Parental Authorization",
                            ),
                            (
                                "data_transfer_adequacy",
                                "Transfer Based on Adequacy Decision",
                            ),
                            (
                                "data_transfer_safeguards",
                                "Transfer Subject to Appropriate Safeguards",
                            ),
                            (
                                "data_transfer_binding_rules",
                                "Transfer Subject to Binding Corporate Rules",
                            ),
                            (
                                "data_transfer_derogation",
                                "Transfer Based on Derogation for Specific Situations",
                            ),
                            ("consent_and_contract", "Consent and Contract"),
                            (
                                "contract_and_legitimate_interests",
                                "Contract and Legitimate Interests",
                            ),
                            ("not_applicable", "Not Applicable"),
                            ("other", "Other Legal Basis (Specify in Description)"),
                        ],
                        max_length=255,
                    ),
                ),
                ("information_channel", models.CharField(blank=True, max_length=255)),
                ("usage_channel", models.CharField(blank=True, max_length=255)),
                ("dpia_required", models.BooleanField(blank=True, default=False)),
                ("dpia_reference", models.CharField(blank=True, max_length=255)),
                ("has_sensitive_personal_data", models.BooleanField(default=False)),
                (
                    "associated_controls",
                    models.ManyToManyField(
                        blank=True, related_name="processings", to="core.appliedcontrol"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="authored_processings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "filtering_labels",
                    models.ManyToManyField(
                        blank=True, to="core.filteringlabel", verbose_name="Labels"
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_processings",
                        to="tprm.entity",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PersonalData",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("basic_identity", "Basic Identity Information"),
                            ("name", "Name"),
                            ("identification_numbers", "Identification Numbers"),
                            ("online_identifiers", "Online Identifiers"),
                            ("location_data", "Location Data"),
                            ("contact_details", "Contact Details"),
                            ("address", "Address"),
                            ("email", "Email Address"),
                            ("phone_number", "Phone Number"),
                            ("financial_data", "Financial Data"),
                            ("bank_account", "Bank Account Information"),
                            ("payment_card", "Payment Card Information"),
                            ("transaction_history", "Transaction History"),
                            ("salary_information", "Salary Information"),
                            ("health_data", "Health Data"),
                            ("genetic_data", "Genetic Data"),
                            ("biometric_data", "Biometric Data"),
                            ("racial_ethnic_origin", "Racial or Ethnic Origin"),
                            ("political_opinions", "Political Opinions"),
                            ("religious_beliefs", "Religious or Philosophical Beliefs"),
                            ("trade_union_membership", "Trade Union Membership"),
                            ("sexual_orientation", "Sexual Orientation"),
                            ("sex_life_data", "Sex Life Data"),
                            ("browsing_history", "Browsing History"),
                            ("search_history", "Search History"),
                            ("cookies", "Cookies Data"),
                            ("device_information", "Device Information"),
                            ("ip_address", "IP Address"),
                            ("user_behavior", "User Behavior"),
                            ("employment_details", "Employment Details"),
                            ("education_history", "Education History"),
                            (
                                "professional_qualifications",
                                "Professional Qualifications",
                            ),
                            ("work_performance", "Work Performance Data"),
                            ("family_details", "Family Details"),
                            ("social_network", "Social Network"),
                            ("lifestyle_information", "Lifestyle Information"),
                            ("correspondence", "Correspondence Content"),
                            ("messaging_content", "Messaging Content"),
                            ("communication_metadata", "Communication Metadata"),
                            ("government_identifiers", "Government Identifiers"),
                            ("tax_information", "Tax Information"),
                            ("social_security", "Social Security Information"),
                            ("drivers_license", "Driver's License Information"),
                            ("passport_information", "Passport Information"),
                            ("legal_records", "Legal Records"),
                            ("criminal_records", "Criminal Records"),
                            ("judicial_data", "Judicial Data"),
                            ("preferences", "Preferences"),
                            ("opinions", "Opinions"),
                            ("feedback", "Feedback"),
                            ("images_photos", "Images and Photos"),
                            ("voice_recordings", "Voice Recordings"),
                            ("video_recordings", "Video Recordings"),
                            ("other", "Other Personal Data"),
                        ],
                        max_length=255,
                    ),
                ),
                ("retention", models.CharField(blank=True, max_length=255)),
                (
                    "deletion_policy",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("automatic_deletion", "Automatic Deletion"),
                            ("anonymization", "Anonymization"),
                            ("manual_review_deletion", "Manual Review Deletion"),
                            ("user_requested_deletion", "User Requested Deletion"),
                            ("legal_regulatory_hold", "Legal/Regulatory Hold"),
                            ("partial_deletion", "Partial Deletion"),
                        ],
                        max_length=50,
                    ),
                ),
                ("is_sensitive", models.BooleanField(default=False)),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "processing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="personal_data",
                        to="privacy.processing",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DataTransfer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("country", models.CharField(max_length=100)),
                ("legal_basis", models.CharField(max_length=255)),
                ("guarantees", models.TextField(blank=True)),
                ("documentation_link", models.URLField(blank=True)),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "processing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_transfers",
                        to="privacy.processing",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DataSubject",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("category", models.CharField(max_length=255)),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "processing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_subjects",
                        to="privacy.processing",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DataRecipient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("category", models.CharField(max_length=255)),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "processing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_recipients",
                        to="privacy.processing",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DataContractor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("relationship_type", models.CharField(max_length=255)),
                ("country", models.CharField(max_length=100)),
                ("documentation_link", models.URLField(blank=True)),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "processing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contractors_involved",
                        to="privacy.processing",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Purpose",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "processing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purposes",
                        to="privacy.processing",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
