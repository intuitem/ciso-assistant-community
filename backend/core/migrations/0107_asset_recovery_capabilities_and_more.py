# Generated by Django 5.2.7 on 2025-10-15 07:54

import core.validators
import django.db.models.deletion
import iam.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0106_alter_terminology_is_published"),
        ("iam", "0016_folder_filtering_labels"),
    ]

    operations = [
        migrations.AddField(
            model_name="asset",
            name="recovery_capabilities",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Actual recovery objectives",
                validators=[
                    core.validators.JSONSchemaInstanceValidator(
                        {
                            "$id": "https://ciso-assistant.com/schemas/assets/security_objectives.schema.json",
                            "$schema": "https://json-schema.org/draft/2020-12/schema",
                            "description": "The security objectives of the asset",
                            "properties": {
                                "objectives": {
                                    "patternProperties": {
                                        "^[a-z_]+$": {
                                            "properties": {
                                                "value": {
                                                    "minimum": 0,
                                                    "type": "integer",
                                                }
                                            },
                                            "type": "object",
                                        }
                                    },
                                    "type": "object",
                                }
                            },
                            "title": "Security objectives",
                            "type": "object",
                        }
                    )
                ],
                verbose_name="Recovery objectives",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="security_capabilities",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Actual security capabilities",
                validators=[
                    core.validators.JSONSchemaInstanceValidator(
                        {
                            "$id": "https://ciso-assistant.com/schemas/assets/security_objectives.schema.json",
                            "$schema": "https://json-schema.org/draft/2020-12/schema",
                            "description": "The security objectives of the asset",
                            "properties": {
                                "objectives": {
                                    "patternProperties": {
                                        "^[a-z_]+$": {
                                            "properties": {
                                                "is_enabled": {"type": "boolean"},
                                                "value": {
                                                    "maximum": 4,
                                                    "minimum": 0,
                                                    "type": "integer",
                                                },
                                            },
                                            "type": "object",
                                        }
                                    },
                                    "type": "object",
                                }
                            },
                            "title": "Security objectives",
                            "type": "object",
                        }
                    )
                ],
                verbose_name="Security capabilities",
            ),
        ),
        migrations.CreateModel(
            name="AssetCapability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                (
                    "urn",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="URN",
                    ),
                ),
                (
                    "ref_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Reference ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Provider"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "annotation",
                    models.TextField(blank=True, null=True, verbose_name="Annotation"),
                ),
                (
                    "translations",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Translations"
                    ),
                ),
                (
                    "locale",
                    models.CharField(
                        default="en", max_length=100, verbose_name="Locale"
                    ),
                ),
                (
                    "default_locale",
                    models.BooleanField(default=True, verbose_name="Default locale"),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asset Capability",
                "verbose_name_plural": "Asset Capabilities",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="asset",
            name="overridden_children_capabilities",
            field=models.ManyToManyField(
                blank=True,
                to="core.assetcapability",
                verbose_name="Overridden children capabilities",
            ),
        ),
    ]
