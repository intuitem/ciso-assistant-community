# Generated by Django 5.1.10 on 2025-08-20 12:45

import django.db.models.deletion
import iam.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0088_tasktemplate_link"),
        ("iam", "0014_user_observation"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="OrganisationIssue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "ref_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Reference ID"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("--", "Undefined"),
                            ("political", "Political"),
                            ("economic", "Economic"),
                            ("social", "Social"),
                            ("technology", "Technology"),
                            ("legal", "Legal"),
                            ("environmental", "Environmental"),
                        ],
                        default="--",
                        max_length=32,
                        verbose_name="Category",
                    ),
                ),
                (
                    "origin",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("--", "Undefined"),
                            ("internal", "Internal"),
                            ("external", "External"),
                        ],
                        default="--",
                        max_length=32,
                        verbose_name="Origin",
                    ),
                ),
                (
                    "observation",
                    models.TextField(blank=True, null=True, verbose_name="Observation"),
                ),
                (
                    "assets",
                    models.ManyToManyField(
                        blank=True, to="core.asset", verbose_name="asset"
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
            ],
            options={
                "verbose_name": "Issue",
                "verbose_name_plural": "Issues",
            },
        ),
        migrations.CreateModel(
            name="OrganisationObjective",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "observation",
                    models.TextField(blank=True, null=True, verbose_name="Observation"),
                ),
                (
                    "ref_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Reference ID"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("in_progress", "In progress"),
                            ("achieved", "Achieved"),
                            ("degraded", "Degraded"),
                            ("deprecated", "Deprecated"),
                        ],
                        default="draft",
                        max_length=100,
                        verbose_name="Status",
                    ),
                ),
                (
                    "health",
                    models.CharField(
                        choices=[
                            ("--", "Undefined"),
                            ("on_track", "On track"),
                            ("at_risk", "At risk"),
                            ("off_track", "Off track"),
                        ],
                        default="--",
                        max_length=100,
                        verbose_name="Health",
                    ),
                ),
                (
                    "assets",
                    models.ManyToManyField(
                        blank=True, to="core.asset", verbose_name="asset"
                    ),
                ),
                (
                    "assigned_to",
                    models.ManyToManyField(
                        blank=True,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Assigned to",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "issues",
                    models.ManyToManyField(
                        blank=True,
                        related_name="objectives",
                        to="core.organisationissue",
                        verbose_name="issues",
                    ),
                ),
                (
                    "tasks",
                    models.ManyToManyField(
                        blank=True,
                        related_name="objectives",
                        to="core.tasktemplate",
                        verbose_name="Issue",
                    ),
                ),
            ],
            options={
                "verbose_name": "Objective",
                "verbose_name_plural": "Objectives",
            },
        ),
    ]
