# Generated by Django 5.2.7 on 2025-10-26 17:58

import django.db.models.deletion
import iam.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0108_requirementnode_importance_requirementnode_weight"),
        ("crq", "0001_initial"),
        ("ebios_rm", "0018_convert_stakeholder_category_to_terminology"),
        ("iam", "0016_folder_filtering_labels"),
        ("tprm", "0007_entity_relationship"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ValidationFlow",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("request_notes", models.TextField(blank=True, null=True)),
                ("approver_observation", models.TextField(blank=True, null=True)),
                (
                    "ref_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Reference ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("revoked", "Revoked"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("expiration_date", models.DateField(null=True)),
                (
                    "approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "compliance_assessments",
                    models.ManyToManyField(blank=True, to="core.complianceassessment"),
                ),
                (
                    "crq_studies",
                    models.ManyToManyField(blank=True, to="crq.quantitativeriskstudy"),
                ),
                (
                    "ebios_studies",
                    models.ManyToManyField(blank=True, to="ebios_rm.ebiosrmstudy"),
                ),
                (
                    "entity_assessments",
                    models.ManyToManyField(blank=True, to="tprm.entityassessment"),
                ),
                ("evidences", models.ManyToManyField(blank=True, to="core.evidence")),
                (
                    "findings_assessments",
                    models.ManyToManyField(blank=True, to="core.findingsassessment"),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                ("policies", models.ManyToManyField(blank=True, to="core.policy")),
                (
                    "risk_assessments",
                    models.ManyToManyField(blank=True, to="core.riskassessment"),
                ),
                (
                    "security_exceptions",
                    models.ManyToManyField(blank=True, to="core.securityexception"),
                ),
            ],
            options={
                "verbose_name": "Validation flow",
                "verbose_name_plural": "Validation flows",
            },
        ),
    ]
