# Migration: Replace Qualification with Terminology for Incident & RiskScenario.qualifications
# Generated by Django 5.1.10 on 2025-09-10 14:49

import re
from django.db import migrations, models


def normalize_name(name: str) -> str:
    """
    Normalize qualification names into a consistent snake_case-like format.
    Example: "High-RiskEvent" -> "high_risk_event"
    """
    return re.sub(r"[^a-z0-9]+", "_", name.lower()).strip("_")


def migrate_incident_qualifications(apps, schema_editor):
    Incident = apps.get_model("core", "Incident")
    Terminology = apps.get_model("core", "Terminology")
    db_alias = schema_editor.connection.alias

    for incident in (
        Incident.objects.using(db_alias).prefetch_related("qualifications").all()
    ):
        old_qualifications = incident.qualifications.all()
        if not old_qualifications:
            continue

        for qualification in old_qualifications:
            normalized_qual_name = normalize_name(qualification.name)
            terminology, _ = Terminology.objects.using(db_alias).get_or_create(
                name=normalized_qual_name,
                defaults={"field_path": "qualifications", "is_visible": True},
            )
            incident.qualifications_new.add(terminology)


def migrate_riskscenario_qualifications(apps, schema_editor):
    RiskScenario = apps.get_model("core", "RiskScenario")
    Terminology = apps.get_model("core", "Terminology")
    db_alias = schema_editor.connection.alias

    for scenario in RiskScenario.objects.using(db_alias).all():
        old_qualifications = scenario.qualifications or []
        if not old_qualifications:
            continue

        for qual_name in old_qualifications:
            normalized_qual_name = normalize_name(str(qual_name))
            terminology, _ = Terminology.objects.using(db_alias).get_or_create(
                name=normalized_qual_name,
                defaults={"field_path": "qualifications", "is_visible": True},
            )
            scenario.qualifications_new.add(terminology)


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0093_alter_asset_parent_assets"),
    ]

    operations = [
        # INCIDENT
        migrations.AddField(
            model_name="incident",
            name="qualifications_new",
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={"field_path": "qualifications", "is_visible": True},
                related_name="incidents_qualifications_new",
                to="core.terminology",
                verbose_name="Qualifications",
            ),
        ),
        migrations.RunPython(migrate_incident_qualifications),
        migrations.RemoveField(
            model_name="incident",
            name="qualifications",
        ),
        migrations.RenameField(
            model_name="incident",
            old_name="qualifications_new",
            new_name="qualifications",
        ),
        migrations.AlterField(
            model_name="incident",
            name="qualifications",
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={"field_path": "qualifications", "is_visible": True},
                related_name="incidents_qualifications",
                to="core.terminology",
                verbose_name="Qualifications",
            ),
        ),
        # RISKSCENARIO
        migrations.AddField(
            model_name="riskscenario",
            name="qualifications_new",
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={"field_path": "qualifications", "is_visible": True},
                related_name="risk_scenarios_qualifications_new",
                to="core.terminology",
                verbose_name="Qualifications",
            ),
        ),
        migrations.RunPython(migrate_riskscenario_qualifications),
        migrations.RemoveField(
            model_name="riskscenario",
            name="qualifications",
        ),
        migrations.RenameField(
            model_name="riskscenario",
            old_name="qualifications_new",
            new_name="qualifications",
        ),
        migrations.AlterField(
            model_name="riskscenario",
            name="qualifications",
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={"field_path": "qualifications", "is_visible": True},
                related_name="risk_scenarios_qualifications",
                to="core.terminology",
                verbose_name="Qualifications",
            ),
        ),
        # TERMINOLOGY
        migrations.AlterField(
            model_name="terminology",
            name="field_path",
            field=models.CharField(
                choices=[
                    ("ro_to.risk_origin", "ro_to/risk_origin"),
                    ("qualifications", "qualifications"),
                ],
                max_length=100,
                verbose_name="Field path",
            ),
        ),
    ]
