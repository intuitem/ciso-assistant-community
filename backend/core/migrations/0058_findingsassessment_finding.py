# Generated by Django 5.1.5 on 2025-02-25 16:26

import django.db.models.deletion
import iam.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0057_store_storedlibrary_content_as_dict_not_str"),
        ("iam", "0010_user_preferences"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FindingsAssessment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("eta", models.DateField(blank=True, null=True, verbose_name="ETA")),
                (
                    "due_date",
                    models.DateField(blank=True, null=True, verbose_name="Due date"),
                ),
                (
                    "version",
                    models.CharField(
                        blank=True,
                        default="1.0",
                        help_text="Version of the compliance assessment (eg. 1.0, 2.0, etc.)",
                        max_length=100,
                        null=True,
                        verbose_name="Version",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("planned", "Planned"),
                            ("in_progress", "In progress"),
                            ("in_review", "In review"),
                            ("done", "Done"),
                            ("deprecated", "Deprecated"),
                        ],
                        default="planned",
                        max_length=100,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "observation",
                    models.TextField(blank=True, null=True, verbose_name="Observation"),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("--", "Undefined"),
                            ("pentest", "Pentest"),
                            ("audit", "Audit"),
                            ("self_identified", "Self-identified"),
                        ],
                        default="--",
                        max_length=32,
                        verbose_name="Category",
                    ),
                ),
                (
                    "authors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="%(class)s_authors",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Authors",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "owner",
                    models.ManyToManyField(
                        blank=True,
                        related_name="findings_assessments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
                (
                    "perimeter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.perimeter",
                        verbose_name="Perimeter",
                    ),
                ),
                (
                    "reviewers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="%(class)s_reviewers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Reviewers",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Finding",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "ref_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Reference ID"
                    ),
                ),
                (
                    "severity",
                    models.IntegerField(
                        default=-1,
                        help_text="The severity of the finding",
                        verbose_name="Severity",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("--", "Undefined"),
                            ("identified", "Identified"),
                            ("confirmed", "Confirmed"),
                            ("dismissed", "Dismissed"),
                            ("assigned", "Assigned"),
                            ("in_progress", "In Progress"),
                            ("mitigated", "Mitigated"),
                            ("resolved", "Resolved"),
                            ("deprecated", "Deprecated"),
                        ],
                        default="--",
                        max_length=32,
                        verbose_name="Status",
                    ),
                ),
                (
                    "applied_controls",
                    models.ManyToManyField(
                        blank=True,
                        related_name="findings",
                        to="core.appliedcontrol",
                        verbose_name="Applied controls",
                    ),
                ),
                (
                    "filtering_labels",
                    models.ManyToManyField(
                        blank=True, to="core.filteringlabel", verbose_name="Labels"
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "owner",
                    models.ManyToManyField(
                        blank=True,
                        related_name="findings",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
                (
                    "reference_controls",
                    models.ManyToManyField(
                        blank=True,
                        related_name="findings",
                        to="core.referencecontrol",
                        verbose_name="Reference controls",
                    ),
                ),
                (
                    "vulnerabilities",
                    models.ManyToManyField(
                        blank=True,
                        related_name="findings",
                        to="core.vulnerability",
                        verbose_name="Vulnerabilities",
                    ),
                ),
                (
                    "findings_assessment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="findings",
                        to="core.findingsassessment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Finding",
                "verbose_name_plural": "Findings",
            },
        ),
    ]
