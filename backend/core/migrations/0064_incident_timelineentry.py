# Generated by Django 5.1.7 on 2025-03-28 14:06

import django.db.models.deletion
import django.utils.timezone
import iam.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0063_appliedcontrol_assets"),
        ("iam", "0010_user_preferences"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "ref_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Reference ID"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("ongoing", "Ongoing"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                            ("dismissed", "Dismissed"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Critical"),
                            (2, "Major"),
                            (3, "Moderate"),
                            (4, "Minor"),
                            (5, "Low"),
                            (6, "unknown"),
                        ],
                        default=3,
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(default=True, verbose_name="published"),
                ),
                (
                    "assets",
                    models.ManyToManyField(
                        blank=True,
                        related_name="incidents",
                        to="core.asset",
                        verbose_name="Assets",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "owners",
                    models.ManyToManyField(
                        blank=True,
                        related_name="incidents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owners",
                    ),
                ),
                (
                    "qualifications",
                    models.ManyToManyField(
                        blank=True,
                        related_name="incidents",
                        to="core.qualification",
                        verbose_name="Qualifications",
                    ),
                ),
                (
                    "threats",
                    models.ManyToManyField(
                        blank=True,
                        related_name="incidents",
                        to="core.threat",
                        verbose_name="Threats",
                    ),
                ),
            ],
            options={
                "verbose_name": "Incident",
                "verbose_name_plural": "Incidents",
            },
        ),
        migrations.CreateModel(
            name="TimelineEntry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("entry", models.CharField(max_length=200, verbose_name="Entry")),
                (
                    "entry_type",
                    models.CharField(
                        choices=[
                            ("detection", "Detection"),
                            ("mitigation", "Mitigation"),
                            ("observation", "Observation"),
                            ("severity_changed", "Severity changed"),
                            ("status_changed", "Status changed"),
                        ],
                        default="observation",
                        max_length=20,
                        verbose_name="Entry type",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Timestamp"
                    ),
                ),
                (
                    "observation",
                    models.TextField(blank=True, null=True, verbose_name="Observation"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=True, verbose_name="published"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="timeline_entries",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Author",
                    ),
                ),
                (
                    "evidences",
                    models.ManyToManyField(
                        blank=True,
                        related_name="timeline_entries",
                        to="core.evidence",
                        verbose_name="Evidence",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timeline_entries",
                        to="core.incident",
                        verbose_name="Incident",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
