# Generated by Django 5.2.6 on 2025-09-12 12:08

import django.db.models.deletion
import iam.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0094_appliedcontrol_cost_to_json"),
        ("iam", "0014_user_observation"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="QuantitativeRiskStudy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("eta", models.DateField(blank=True, null=True, verbose_name="ETA")),
                (
                    "due_date",
                    models.DateField(blank=True, null=True, verbose_name="Due date"),
                ),
                ("ref_id", models.CharField(blank=True, max_length=100)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("planned", "Planned"),
                            ("in_progress", "In progress"),
                            ("in_review", "In review"),
                            ("done", "Done"),
                            ("deprecated", "Deprecated"),
                        ],
                        default="planned",
                        max_length=100,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "observation",
                    models.TextField(blank=True, null=True, verbose_name="Observation"),
                ),
                (
                    "risk_tolerance",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Risk tolerance points and curve data. Expected format: {'points': {'point1': {'probability': float, 'acceptable_loss': float}, 'point2': {'probability': float, 'acceptable_loss': float}}, 'curve_data': {'loss_values': [...], 'probability_values': [...]}}",
                        null=True,
                    ),
                ),
                (
                    "loss_threshold",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Loss threshold"
                    ),
                ),
                (
                    "distribution_model",
                    models.CharField(
                        choices=[("lognormal_ci90", "Lognormal - CI 90")],
                        default="lognormal_ci90",
                        max_length=100,
                        verbose_name="Distribution model",
                    ),
                ),
                (
                    "authors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="quantitative_risk_study_authors",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Authors",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "reviewers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="quantitative_risk_study_reviewers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Reviewers",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quantitative Risk Study",
                "verbose_name_plural": "Quantitative Risk Studies",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuantitativeRiskScenario",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[(1, "P1"), (2, "P2"), (3, "P3"), (4, "P4")],
                        null=True,
                        verbose_name="Priority",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("open", "Open"),
                            ("mitigate", "Mitigate"),
                            ("accept", "Accept"),
                            ("transfer", "Transfer"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "observation",
                    models.TextField(blank=True, null=True, verbose_name="Observation"),
                ),
                ("ref_id", models.CharField(blank=True, max_length=100)),
                (
                    "is_selected",
                    models.BooleanField(default=True, verbose_name="Is selected"),
                ),
                (
                    "assets",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Assets impacted by the risk scenario",
                        related_name="quantitative_risk_scenarios",
                        to="core.asset",
                        verbose_name="Assets",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "owner",
                    models.ManyToManyField(
                        blank=True,
                        related_name="quantitative_risk_scenarios",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
                (
                    "qualifications",
                    models.ManyToManyField(
                        blank=True,
                        related_name="quantitative_risk_scenarios",
                        to="core.qualification",
                        verbose_name="Qualifications",
                    ),
                ),
                (
                    "threats",
                    models.ManyToManyField(
                        blank=True,
                        related_name="quantitative_risk_scenarios",
                        to="core.threat",
                        verbose_name="Threats",
                    ),
                ),
                (
                    "vulnerabilities",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Vulnerabities exploited by the risk scenario",
                        related_name="quantitative_risk_scenarios",
                        to="core.vulnerability",
                        verbose_name="Vulnerabilities",
                    ),
                ),
                (
                    "quantitative_risk_study",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_scenarios",
                        to="crq.quantitativeriskstudy",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quantitative Risk Scenario",
                "verbose_name_plural": "Quantitative Risk Scenarios",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuantitativeRiskHypothesis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "risk_stage",
                    models.CharField(
                        choices=[
                            ("inherent", "Inherent"),
                            ("current", "Current"),
                            ("residual", "Residual"),
                        ],
                        default="current",
                        max_length=20,
                        verbose_name="risk stage",
                    ),
                ),
                ("ref_id", models.CharField(blank=True, max_length=100)),
                ("parameters", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "simulation_data",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                (
                    "observation",
                    models.TextField(blank=True, null=True, verbose_name="Observation"),
                ),
                (
                    "is_simulation_fresh",
                    models.BooleanField(
                        default=False, verbose_name="Is simulation fresh"
                    ),
                ),
                (
                    "is_selected",
                    models.BooleanField(default=False, verbose_name="Is selected"),
                ),
                (
                    "added_applied_controls",
                    models.ManyToManyField(
                        blank=True,
                        related_name="quantitative_risk_hypotheses_added",
                        to="core.appliedcontrol",
                        verbose_name="Added Applied controls",
                    ),
                ),
                (
                    "existing_applied_controls",
                    models.ManyToManyField(
                        blank=True,
                        related_name="quantitative_risk_hypotheses_existing",
                        to="core.appliedcontrol",
                        verbose_name="Existing Applied controls",
                    ),
                ),
                (
                    "filtering_labels",
                    models.ManyToManyField(
                        blank=True, to="core.filteringlabel", verbose_name="Labels"
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "removed_applied_controls",
                    models.ManyToManyField(
                        blank=True,
                        related_name="quantitative_risk_hypotheses_removed",
                        to="core.appliedcontrol",
                        verbose_name="Removed Applied controls",
                    ),
                ),
                (
                    "quantitative_risk_scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hypotheses",
                        to="crq.quantitativeriskscenario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quantitative Risk Hypothesis",
                "verbose_name_plural": "Quantitative Risk Hypotheses",
                "ordering": ["created_at"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("quantitative_risk_scenario", "name"),
                        name="unique_hypothesis_name_per_scenario",
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="quantitativeriskscenario",
            constraint=models.UniqueConstraint(
                fields=("quantitative_risk_study", "name"),
                name="unique_scenario_name_per_study",
            ),
        ),
    ]
