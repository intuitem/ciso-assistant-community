# Generated by Django 5.2.7 on 2025-10-03 10:48

import django.db.models.deletion
import iam.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0100_alter_terminology_field_path"),
        ("crq", "0001_initial"),
        ("ebios_rm", "0016_alter_fearedevent_qualifications"),
        ("iam", "0015_user_expiry_date"),
        ("tprm", "0006_entityassessment_is_locked"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="GenericCollection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("ref_id", models.CharField(blank=True, max_length=100)),
                (
                    "compliance_assessments",
                    models.ManyToManyField(blank=True, to="core.complianceassessment"),
                ),
                (
                    "crq_studies",
                    models.ManyToManyField(blank=True, to="crq.quantitativeriskstudy"),
                ),
                (
                    "dependencies",
                    models.ManyToManyField(blank=True, to="pmbok.genericcollection"),
                ),
                ("documents", models.ManyToManyField(blank=True, to="core.evidence")),
                (
                    "ebios_studies",
                    models.ManyToManyField(blank=True, to="ebios_rm.ebiosrmstudy"),
                ),
                (
                    "entity_assessments",
                    models.ManyToManyField(blank=True, to="tprm.entityassessment"),
                ),
                (
                    "filtering_labels",
                    models.ManyToManyField(
                        blank=True, to="core.filteringlabel", verbose_name="Labels"
                    ),
                ),
                (
                    "findings_assessments",
                    models.ManyToManyField(blank=True, to="core.findingsassessment"),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                ("policies", models.ManyToManyField(blank=True, to="core.policy")),
                (
                    "risk_assessments",
                    models.ManyToManyField(blank=True, to="core.riskassessment"),
                ),
                (
                    "security_exceptions",
                    models.ManyToManyField(blank=True, to="core.securityexception"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Accreditation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("ref_id", models.CharField(blank=True, max_length=100)),
                ("authority", models.CharField(blank=True, max_length=255)),
                ("expiry_date", models.DateField(blank=True, null=True)),
                (
                    "observation",
                    models.TextField(blank=True, null=True, verbose_name="Observation"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="authored_accreditations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        limit_choices_to={
                            "field_path": "accreditation.category",
                            "is_visible": True,
                        },
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="accreditation_category",
                        to="core.terminology",
                    ),
                ),
                (
                    "checklist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="accreditation_checklist",
                        to="core.complianceassessment",
                    ),
                ),
                (
                    "filtering_labels",
                    models.ManyToManyField(
                        blank=True, to="core.filteringlabel", verbose_name="Labels"
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        limit_choices_to={
                            "field_path": "accreditation.status",
                            "is_visible": True,
                        },
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="accreditation_status",
                        to="core.terminology",
                    ),
                ),
                (
                    "linked_collection",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pmbok.genericcollection",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
