# Generated by Django 5.2.6 on 2025-10-13 13:30
from django.db import migrations


def migrate_category_to_terminology(apps, schema_editor):
    Stakeholder = apps.get_model("ebios_rm", "Stakeholder")
    Terminology = apps.get_model("core", "Terminology")

    DEFAULT_ENTITY_RELATIONSHIPS = [
        {
            "name": "regulatory_authority",
            "builtin": True,
            "field_path": "entity.relationship",
            "is_visible": True,
        },
        {
            "name": "partner",
            "builtin": True,
            "field_path": "entity.relationship",
            "is_visible": True,
        },
        {
            "name": "accreditation_authority",
            "builtin": True,
            "field_path": "entity.relationship",
            "is_visible": True,
        },
        {
            "name": "client",
            "builtin": True,
            "field_path": "entity.relationship",
            "is_visible": True,
        },
        {
            "name": "supplier",
            "builtin": True,
            "field_path": "entity.relationship",
            "is_visible": True,
        },
        {
            "name": "contractor",
            "builtin": True,
            "field_path": "entity.relationship",
            "is_visible": True,
        },
        {
            "name": "other",
            "builtin": True,
            "field_path": "entity.relationship",
            "is_visible": True,
        },
    ]

    for item in DEFAULT_ENTITY_RELATIONSHIPS:
        Terminology.objects.update_or_create(
            name=item["name"],
            field_path=item["field_path"],
            defaults=item,
        )

    category_mapping = {
        "client": "client",
        "partner": "partner",
        "supplier": "supplier",
    }

    for stakeholder in Stakeholder.objects.all():
        if stakeholder.category_old:
            terminology_name = category_mapping.get(stakeholder.category_old)
            if terminology_name:
                try:
                    terminology = Terminology.objects.get(
                        name=terminology_name, field_path="entity.relationship"
                    )
                    stakeholder.category = terminology
                    stakeholder.save(update_fields=["category"])
                except Terminology.DoesNotExist:
                    print(
                        f"Warning: Terminology '{terminology_name}' not found for stakeholder {stakeholder.id}"
                    )


class Migration(migrations.Migration):
    dependencies = [
        ("ebios_rm", "0018_convert_stakeholder_category_to_terminology"),
    ]

    operations = [
        migrations.RunPython(
            migrate_category_to_terminology, migrations.RunPython.noop
        ),
    ]
