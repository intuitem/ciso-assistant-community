apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ciso-assistant.fullname" . }}-huey
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ciso-assistant.labels" (dict "context" . "component" "huey") | nindent 4 }}
spec:
  replicas: {{ .Values.huey.replicas }}
  selector:
    matchLabels:
      {{- include "ciso-assistant.selectorLabels" (dict "context" . "component" "huey") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ciso-assistant.labels" (dict "context" . "component" "huey") | nindent 8 }}
    spec:
      {{- with .Values.huey.imagePullSecrets | default .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Values.huey.name }}
        image: {{ default .Values.global.image.registry .Values.huey.image.registry }}/{{ .Values.huey.image.repository }}:{{ default (include "ciso-assistant.defaultTag" .) .Values.huey.image.tag }}
        imagePullPolicy: {{ default .Values.global.image.imagePullPolicy .Values.huey.image.imagePullPolicy }}
        command: ["/bin/sh"]
        args: ["-c", "poetry run python manage.py run_huey -w 2 --scheduler-interval 60"]
        env:
          {{- with .Values.huey.env }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if .Values.huey.persistence.sqlite.enabled }}
          - name: HUEY_FILE_PATH
            value: /data/huey/huey.db
          {{- else }}
          - name: HUEY_FILE_PATH
            value: /tmp/huey.db
          {{- end }}
          - name: DJANGO_DEBUG
            value: {{ ternary "True" "False" .Values.backend.config.djangoDebug | quote }}
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                {{- if .Values.backend.config.djangoExistingSecretKey }}
                name: {{ .Values.backend.config.djangoExistingSecretKey }}
                {{- else }}
                name: {{ include "ciso-assistant.fullname" . }}-backend
                {{- end }}
                key: django-secret-key
          - name: CISO_ASSISTANT_SUPERUSER_EMAIL
            value: {{ .Values.backend.config.emailAdmin }}
          - name: CISO_ASSISTANT_URL
            value: {{ template "ciso-assistant.url" . }}
          - name: ALLOWED_HOSTS
            value: localhost,127.0.0.1,{{ include "ciso-assistant.fullname" . }}-backend,{{ .Values.global.domain }}{{ if .Values.global.extraAllowedHosts }},{{ .Values.global.extraAllowedHosts }}{{ end }}
          - name: DEFAULT_FROM_EMAIL
            value: {{ .Values.backend.config.smtp.defaultFrom | quote }}
          - name: EMAIL_HOST
            value: {{ .Values.backend.config.smtp.primary.host | quote }}
          - name: EMAIL_PORT
            value: {{ .Values.backend.config.smtp.primary.port | quote }}
          - name: EMAIL_USE_TLS
            value: {{ .Values.backend.config.smtp.primary.useTls | quote }}
          {{- if .Values.backend.config.smtp.primary.username }}
          - name: EMAIL_HOST_USER
            value: {{ .Values.backend.config.smtp.primary.username | quote }}
          {{- end }}
          {{- if .Values.backend.config.smtp.existingSecret }}
          - name: EMAIL_HOST_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.backend.config.smtp.existingSecret }}
                key: email-primary-password
          {{- else if .Values.backend.config.smtp.primary.password }}
          - name: EMAIL_HOST_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "ciso-assistant.fullname" . }}-backend
                key: email-primary-password
          {{- end }}
        volumeMounts:
        - name: tmp-data
          mountPath: /tmp
        {{- if .Values.huey.persistence.sqlite.enabled }}
        - name: huey-data
          mountPath: /data/huey
        {{- end }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        {{- if .Values.huey.resources }}
        resources:
          {{ toYaml .Values.huey.resources | indent 10 }}
        {{- end }}
        {{- with .Values.huey.containerSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: tmp-data
        emptyDir:
          sizeLimit: 256Mi
      {{- if .Values.huey.persistence.sqlite.enabled }}
      - name: huey-data
        persistentVolumeClaim:
          claimName: {{ include "ciso-assistant.fullname" . }}-sqlite
      {{- end }}
